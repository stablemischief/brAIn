[tool.poetry]
name = "brain-v2"
version = "2.0.0"
description = "AI-enhanced RAG Pipeline Management System with Real-time Monitoring"
authors = ["BMad Team <team@brain.ai>"]
readme = "README.md"
python = "^3.11"

[tool.poetry.dependencies]
python = "^3.11"

# Core Web Framework
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
python-multipart = "^0.0.6"

# Pydantic & Validation
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
pydantic-ai = "^0.0.6"
email-validator = "^2.1.0"

# Database & ORM
sqlalchemy = "^2.0.25"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.1"
pgvector = "^0.2.4"

# Supabase Integration
supabase = "^2.3.0"
realtime = "^1.0.2"
gotrue = "^2.1.0"
storage3 = "^0.6.1"

# AI/ML Dependencies
openai = "^1.10.0"
tiktoken = "^0.5.2"
langchain = "^0.1.5"
langchain-openai = "^0.0.5"
langfuse = "^2.18.0"

# Google Drive Integration
google-api-python-client = "^2.116.0"
google-auth = "^2.27.0"
google-auth-oauthlib = "^1.2.0"
google-auth-httplib2 = "^0.2.0"

# File Processing
pypdf = "^3.17.4"
python-docx = "^1.1.0"
openpyxl = "^3.1.2"
python-pptx = "^0.6.23"
beautifulsoup4 = "^4.12.3"
markdown = "^3.5.2"
chardet = "^5.2.0"
python-magic = "^0.4.27"
Pillow = "^10.2.0"

# Async & Concurrency
aiofiles = "^23.2.1"
aiohttp = "^3.9.3"
asyncio = "^3.4.3"
httpx = "^0.26.0"

# WebSocket & Real-time
websockets = "^12.0"
python-socketio = "^5.11.0"

# Redis & Caching
redis = "^5.0.1"
hiredis = "^2.3.2"

# Authentication & Security
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
cryptography = "^42.0.2"

# Monitoring & Logging
structlog = "^24.1.0"
python-json-logger = "^2.0.7"
sentry-sdk = {extras = ["fastapi"], version = "^1.40.0"}

# Task Queue & Scheduling
celery = "^5.3.6"
flower = "^2.0.1"
apscheduler = "^3.10.4"

# Utilities
python-dotenv = "^1.0.1"
pyyaml = "^6.0.1"
click = "^8.1.7"
rich = "^13.7.0"
tenacity = "^8.2.3"
validators = "^0.22.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-env = "^1.1.3"
black = "^24.1.1"
ruff = "^0.1.14"
mypy = "^1.8.0"
ipython = "^8.20.0"
ipdb = "^0.13.13"
pre-commit = "^3.6.0"
faker = "^22.5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "N", "W", "UP", "ANN", "S", "B", "A", "C4", "PT", "SIM", "PD"]
ignore = ["E501", "ANN101", "ANN102", "B008"]
fixable = ["ALL"]
unfixable = []
target-version = "py311"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src", "backend"]
omit = ["*/tests/*", "*/migrations/*", "*/__pycache__/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
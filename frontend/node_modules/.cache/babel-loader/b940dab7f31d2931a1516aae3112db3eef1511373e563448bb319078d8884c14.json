{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useProcessingStatus,useSystemHealth,useCostUpdates,useWebSocket}from'../../hooks/useWebSocket';import{WS_CHANNELS}from'../../utils/websocket';import{HealthIndicator}from'./HealthIndicator';import{ProcessingStatusCard}from'./ProcessingStatusCard';import{CostAnalyticsCard}from'./CostAnalyticsCard';import{RecentActivity}from'./RecentActivity';import{QuickActions}from'./QuickActions';import{RefreshButton}from'./RefreshButton';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Dashboard=_ref=>{var _costData$total_cost;let{className=''}=_ref;// Real-time data hooks\nconst processingStatus=useProcessingStatus();const systemHealth=useSystemHealth();const costData=useCostUpdates();// WebSocket connection\nconst{connected,connecting,error:wsError,sendMessage}=useWebSocket({autoConnect:true,channels:[WS_CHANNELS.PROCESSING,WS_CHANNELS.SYSTEM_HEALTH,WS_CHANNELS.COST_MONITORING,WS_CHANNELS.USER_ACTIVITY]});// Local state for dashboard\nconst[lastUpdated,setLastUpdated]=useState(new Date());const[refreshing,setRefreshing]=useState(false);// Update timestamp when data changes\nuseEffect(()=>{if(processingStatus||systemHealth||costData){setLastUpdated(new Date());}},[processingStatus,systemHealth,costData]);// Manual refresh function\nconst handleRefresh=async()=>{setRefreshing(true);// Send refresh requests via WebSocket\nsendMessage({type:'request_update',channels:[WS_CHANNELS.PROCESSING,WS_CHANNELS.SYSTEM_HEALTH,WS_CHANNELS.COST_MONITORING]});// Reset refreshing state after a delay\nsetTimeout(()=>setRefreshing(false),1000);};// Connection status indicator\nconst getConnectionStatus=()=>{if(connecting)return{status:'connecting',message:'Connecting...'};if(!connected)return{status:'disconnected',message:'Disconnected'};if(wsError)return{status:'error',message:\"Error: \".concat(wsError)};return{status:'connected',message:'Live Updates Active'};};const connectionStatus=getConnectionStatus();return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 \".concat(className),children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:\"brAIn Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-1\",children:\"Intelligent Document Processing System\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full \".concat(connectionStatus.status==='connected'?'bg-green-500 animate-pulse':connectionStatus.status==='connecting'?'bg-yellow-500 animate-pulse':'bg-red-500')}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:connectionStatus.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[\"Updated: \",lastUpdated.toLocaleTimeString()]}),/*#__PURE__*/_jsx(RefreshButton,{onRefresh:handleRefresh,refreshing:refreshing,disabled:!connected})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"System Health\"}),/*#__PURE__*/_jsx(HealthIndicator,{health:systemHealth,connected:connected})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lg:col-span-2 space-y-6\",children:[/*#__PURE__*/_jsx(ProcessingStatusCard,{status:processingStatus,connected:connected}),/*#__PURE__*/_jsx(RecentActivity,{connected:connected})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(CostAnalyticsCard,{data:costData,connected:connected}),/*#__PURE__*/_jsx(QuickActions,{systemHealth:systemHealth,processingStatus:processingStatus})]})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"mt-12 px-6 py-4 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"brAIn v2.0 - Intelligent Document Processing\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[(processingStatus===null||processingStatus===void 0?void 0:processingStatus.processed_documents)||0,\" documents processed\"]}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u2022\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",(costData===null||costData===void 0?void 0:(_costData$total_cost=costData.total_cost)===null||_costData$total_cost===void 0?void 0:_costData$total_cost.toFixed(4))||'0.0000',\" total cost\"]})]})]})})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useProcessingStatus","useSystemHealth","useCostUpdates","useWebSocket","WS_CHANNELS","HealthIndicator","ProcessingStatusCard","CostAnalyticsCard","RecentActivity","QuickActions","RefreshButton","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","_costData$total_cost","className","processingStatus","systemHealth","costData","connected","connecting","error","wsError","sendMessage","autoConnect","channels","PROCESSING","SYSTEM_HEALTH","COST_MONITORING","USER_ACTIVITY","lastUpdated","setLastUpdated","Date","refreshing","setRefreshing","handleRefresh","type","setTimeout","getConnectionStatus","status","message","concat","connectionStatus","children","toLocaleTimeString","onRefresh","disabled","health","data","processed_documents","total_cost","toFixed"],"sources":["/Users/james/Documents/Product-RD/brAIn/frontend/src/components/Dashboard/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  useProcessingStatus, \n  useSystemHealth, \n  useCostUpdates,\n  useWebSocket \n} from '../../hooks/useWebSocket';\nimport { SystemHealth, ProcessingStatus, CostAnalytics } from '../../types';\nimport { WS_CHANNELS } from '../../utils/websocket';\nimport { HealthIndicator } from './HealthIndicator';\nimport { ProcessingStatusCard } from './ProcessingStatusCard';\nimport { CostAnalyticsCard } from './CostAnalyticsCard';\nimport { RecentActivity } from './RecentActivity';\nimport { QuickActions } from './QuickActions';\nimport { RefreshButton } from './RefreshButton';\n\ninterface DashboardProps {\n  className?: string;\n}\n\nexport const Dashboard: React.FC<DashboardProps> = ({ className = '' }) => {\n  // Real-time data hooks\n  const processingStatus = useProcessingStatus();\n  const systemHealth = useSystemHealth();\n  const costData = useCostUpdates();\n  \n  // WebSocket connection\n  const { \n    connected, \n    connecting, \n    error: wsError,\n    sendMessage\n  } = useWebSocket({\n    autoConnect: true,\n    channels: [\n      WS_CHANNELS.PROCESSING,\n      WS_CHANNELS.SYSTEM_HEALTH,\n      WS_CHANNELS.COST_MONITORING,\n      WS_CHANNELS.USER_ACTIVITY\n    ]\n  });\n\n  // Local state for dashboard\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\n  const [refreshing, setRefreshing] = useState(false);\n\n  // Update timestamp when data changes\n  useEffect(() => {\n    if (processingStatus || systemHealth || costData) {\n      setLastUpdated(new Date());\n    }\n  }, [processingStatus, systemHealth, costData]);\n\n  // Manual refresh function\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    \n    // Send refresh requests via WebSocket\n    sendMessage({\n      type: 'request_update',\n      channels: [\n        WS_CHANNELS.PROCESSING,\n        WS_CHANNELS.SYSTEM_HEALTH,\n        WS_CHANNELS.COST_MONITORING\n      ]\n    });\n\n    // Reset refreshing state after a delay\n    setTimeout(() => setRefreshing(false), 1000);\n  };\n\n  // Connection status indicator\n  const getConnectionStatus = () => {\n    if (connecting) return { status: 'connecting', message: 'Connecting...' };\n    if (!connected) return { status: 'disconnected', message: 'Disconnected' };\n    if (wsError) return { status: 'error', message: `Error: ${wsError}` };\n    return { status: 'connected', message: 'Live Updates Active' };\n  };\n\n  const connectionStatus = getConnectionStatus();\n\n  return (\n    <div className={`min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 ${className}`}>\n      {/* Header */}\n      <div className=\"px-6 py-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              brAIn Dashboard\n            </h1>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n              Intelligent Document Processing System\n            </p>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            {/* Connection Status */}\n            <div className=\"flex items-center space-x-2\">\n              <div className={`w-2 h-2 rounded-full ${\n                connectionStatus.status === 'connected' ? 'bg-green-500 animate-pulse' :\n                connectionStatus.status === 'connecting' ? 'bg-yellow-500 animate-pulse' :\n                'bg-red-500'\n              }`} />\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                {connectionStatus.message}\n              </span>\n            </div>\n\n            {/* Last Updated */}\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Updated: {lastUpdated.toLocaleTimeString()}\n            </div>\n\n            {/* Refresh Button */}\n            <RefreshButton \n              onRefresh={handleRefresh} \n              refreshing={refreshing}\n              disabled={!connected}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"p-6\">\n        {/* System Health Row */}\n        <div className=\"mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            System Health\n          </h2>\n          <HealthIndicator \n            health={systemHealth} \n            connected={connected}\n          />\n        </div>\n\n        {/* Main Dashboard Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Column - Processing & Activity */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Processing Status */}\n            <ProcessingStatusCard \n              status={processingStatus}\n              connected={connected}\n            />\n\n            {/* Recent Activity */}\n            <RecentActivity \n              connected={connected}\n            />\n          </div>\n\n          {/* Right Column - Analytics & Actions */}\n          <div className=\"space-y-6\">\n            {/* Cost Analytics */}\n            <CostAnalyticsCard \n              data={costData}\n              connected={connected}\n            />\n\n            {/* Quick Actions */}\n            <QuickActions \n              systemHealth={systemHealth}\n              processingStatus={processingStatus}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <footer className=\"mt-12 px-6 py-4 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400\">\n          <div>\n            brAIn v2.0 - Intelligent Document Processing\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <span>\n              {processingStatus?.processed_documents || 0} documents processed\n            </span>\n            <span>•</span>\n            <span>\n              ${costData?.total_cost?.toFixed(4) || '0.0000'} total cost\n            </span>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
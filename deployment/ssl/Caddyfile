# Caddy Configuration for brAIn v2.0 Production
# Automatic HTTPS with Let's Encrypt

{
    # Global options
    email {$SSL_EMAIL}

    # ACME CA server (use staging for testing)
    # acme_ca https://acme-staging-v02.api.letsencrypt.org/directory

    # Production CA (default)
    acme_ca https://acme-v02.api.letsencrypt.org/directory

    # Enable HTTP/3
    servers {
        protocol {
            experimental_http3
        }
    }
}

# Main domain configuration
{$DOMAIN_NAME} {
    # Enable compression
    encode gzip zstd

    # Security headers
    header {
        # HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        # XSS Protection
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"

        # CSP
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss://{$DOMAIN_NAME}"

        # Referrer Policy
        Referrer-Policy "strict-origin-when-cross-origin"

        # Permissions Policy
        Permissions-Policy "geolocation=(), microphone=(), camera=()"

        # Remove server header
        -Server
    }

    # Rate limiting
    rate_limit {
        zone dynamic {
            key {remote_host}
            events 100
            window 1m
        }
    }

    # API routes
    handle /api/* {
        reverse_proxy brain-app:8000 {
            # Load balancing
            lb_policy least_conn

            # Health check
            health_uri /health
            health_interval 10s
            health_timeout 5s
            health_status 200

            # Headers
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}

            # Timeouts
            transport http {
                dial_timeout 10s
                response_header_timeout 20s
                read_timeout 300s
                write_timeout 300s
            }
        }
    }

    # WebSocket routes
    handle /ws/* {
        reverse_proxy brain-app:8000 {
            # WebSocket specific
            header_up Upgrade {http.request.header.Upgrade}
            header_up Connection "Upgrade"

            # Longer timeouts for WebSocket
            transport http {
                dial_timeout 10s
                read_timeout 86400s
                write_timeout 86400s
            }
        }
    }

    # Grafana (subdirectory)
    handle_path /grafana/* {
        reverse_proxy grafana:3000
    }

    # Prometheus (restricted access)
    handle_path /prometheus/* {
        basicauth {
            {$MONITORING_USER} {$MONITORING_PASSWORD_HASH}
        }
        reverse_proxy prometheus:9090
    }

    # Static files (React app)
    handle {
        root * /srv/static
        try_files {path} /index.html
        file_server
    }

    # Custom error pages
    handle_errors {
        @404 {
            expression {http.error.status_code} == 404
        }
        rewrite @404 /404.html

        @5xx {
            expression {http.error.status_code} >= 500
        }
        rewrite @5xx /500.html

        file_server {
            root /srv/static
        }
    }

    # Logging
    log {
        output file /data/access.log {
            roll_size 100mb
            roll_keep 10
            roll_keep_for 720h
        }
        format json
        level INFO
    }
}

# WWW redirect
www.{$DOMAIN_NAME} {
    redir https://{$DOMAIN_NAME}{uri} permanent
}

# Health check endpoint (no SSL)
:2019 {
    metrics /metrics

    handle /health {
        respond "OK" 200
    }
}
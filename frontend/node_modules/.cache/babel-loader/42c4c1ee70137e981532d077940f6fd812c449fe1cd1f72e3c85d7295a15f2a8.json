{"ast":null,"code":"import _objectSpread from\"/Users/james/Documents/Product-RD/brAIn/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useMemo,useState}from'react';import{motion}from'framer-motion';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler}from'chart.js';import{Line}from'react-chartjs-2';import{format,addDays,startOfMonth,endOfMonth}from'date-fns';import{ArrowTrendingUpIcon,ArrowTrendingDownIcon,ClockIcon,ExclamationTriangleIcon,InformationCircleIcon,ChartBarIcon,CurrencyDollarIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler);export const CostProjections=_ref=>{let{historicalData,monthlyBudget,className=''}=_ref;const[selectedScenario,setSelectedScenario]=useState('all');const[projectionPeriod,setProjectionPeriod]=useState('month');const scenarios=[{name:'conservative',label:'Conservative',color:'rgb(34, 197, 94)',// green\nmultiplier:1.1,description:'Assumes minimal growth in usage'},{name:'realistic',label:'Realistic',color:'rgb(59, 130, 246)',// blue\nmultiplier:1.25,description:'Based on current trends'},{name:'optimistic',label:'Optimistic',color:'rgb(239, 68, 68)',// red\nmultiplier:1.4,description:'Assumes increased usage patterns'}];// Generate projections based on historical data\nconst projections=useMemo(()=>{if(!historicalData||historicalData.length===0)return[];const today=new Date();const monthStart=startOfMonth(today);const monthEnd=endOfMonth(today);// Calculate trend from historical data\nconst recentDays=historicalData.slice(-7);// Last 7 days\nconst avgRecentCost=recentDays.reduce((sum,day)=>sum+day.cost,0)/recentDays.length;// Calculate growth rate\nconst firstHalf=historicalData.slice(0,Math.floor(historicalData.length/2));const secondHalf=historicalData.slice(Math.floor(historicalData.length/2));const firstHalfAvg=firstHalf.reduce((sum,day)=>sum+day.cost,0)/firstHalf.length;const secondHalfAvg=secondHalf.reduce((sum,day)=>sum+day.cost,0)/secondHalf.length;const growthRate=secondHalfAvg>0?(secondHalfAvg-firstHalfAvg)/firstHalfAvg:0;const dailyGrowthRate=growthRate/secondHalf.length;const daysToProject=projectionPeriod==='month'?30:projectionPeriod==='quarter'?90:365;const projectionData=[];for(let i=0;i<=daysToProject;i++){const projectionDate=format(addDays(today,i),'yyyy-MM-dd');scenarios.forEach(scenario=>{// Apply scenario multiplier and growth rate\nconst baseProjection=avgRecentCost*(1+dailyGrowthRate*i);const scenarioProjection=baseProjection*scenario.multiplier;// Add some variance for realism\nconst variance=Math.random()*0.1-0.05;// Â±5% variance\nconst projectedCost=Math.max(0,scenarioProjection*(1+variance));// Determine confidence based on distance from today\nlet confidence;if(i<=7)confidence='high';else if(i<=30)confidence='medium';else confidence='low';projectionData.push({date:projectionDate,projectedCost,confidence,scenario:scenario.name});});}return projectionData;},[historicalData,projectionPeriod]);// Calculate summary metrics\nconst summaryMetrics=useMemo(()=>{const monthlyProjections=projections.filter((p,index)=>index<90);// ~30 days * 3 scenarios\nconst scenarioSummaries=scenarios.map(scenario=>{const scenarioData=monthlyProjections.filter(p=>p.scenario===scenario.name);const totalCost=scenarioData.reduce((sum,p)=>sum+p.projectedCost,0);const avgDailyCost=totalCost/(scenarioData.length||1);return _objectSpread(_objectSpread({},scenario),{},{totalCost,avgDailyCost,budgetUtilization:totalCost/monthlyBudget*100,overBudget:totalCost>monthlyBudget});});return scenarioSummaries;},[projections,monthlyBudget,scenarios]);// Prepare chart data\nconst chartData=useMemo(()=>{const filteredProjections=selectedScenario==='all'?projections:projections.filter(p=>p.scenario===selectedScenario);// Group by scenario for chart\nconst datasets=scenarios.filter(scenario=>selectedScenario==='all'||scenario.name===selectedScenario).map(scenario=>{const scenarioData=filteredProjections.filter(p=>p.scenario===scenario.name).sort((a,b)=>new Date(a.date).getTime()-new Date(b.date).getTime());return{label:scenario.label,data:scenarioData.map(p=>({x:p.date,y:p.projectedCost})),borderColor:scenario.color,backgroundColor:scenario.color.replace('rgb','rgba').replace(')',', 0.1)'),tension:0.4,fill:false,pointRadius:0,pointHoverRadius:5,pointHoverBackgroundColor:scenario.color,pointHoverBorderColor:'white',pointHoverBorderWidth:2};});return{datasets};},[projections,scenarios,selectedScenario]);const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{display:true,position:'top',labels:{color:'rgb(107, 114, 128)',usePointStyle:true,pointStyle:'circle'}},tooltip:{mode:'index',intersect:false,backgroundColor:'rgba(17, 24, 39, 0.95)',titleColor:'rgb(243, 244, 246)',bodyColor:'rgb(209, 213, 219)',borderColor:'rgb(75, 85, 99)',borderWidth:1,cornerRadius:8,callbacks:{title:context=>{return format(new Date(context[0].parsed.x),'MMM dd, yyyy');},label:context=>{return\"\".concat(context.dataset.label,\": $\").concat(context.parsed.y.toFixed(2));}}}},scales:{x:{type:'time',time:{unit:'day',displayFormats:{day:'MMM dd'}},grid:{color:'rgba(107, 114, 128, 0.1)',drawBorder:false},ticks:{color:'rgb(107, 114, 128)',maxTicksLimit:8}},y:{beginAtZero:true,grid:{color:'rgba(107, 114, 128, 0.1)',drawBorder:false},ticks:{color:'rgb(107, 114, 128)',callback:function(value){return\"$\".concat(value.toFixed(2));}}}},interaction:{mode:'nearest',axis:'x',intersect:false},animation:{duration:1000,easing:'easeInOutQuart'}};const periodOptions=[{value:'month',label:'30 Days'},{value:'quarter',label:'90 Days'},{value:'year',label:'1 Year'}];return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6 \".concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Cost Projections & Trends\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-1\",children:\"Predictive analysis based on historical usage patterns\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1\",children:periodOptions.map(period=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setProjectionPeriod(period.value),className:\"px-3 py-1 rounded-md text-sm font-medium transition-colors \".concat(projectionPeriod===period.value?'bg-white dark:bg-gray-600 text-gray-900 dark:text-white shadow-sm':'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white'),children:period.label},period.value))}),/*#__PURE__*/_jsxs(\"select\",{value:selectedScenario,onChange:e=>setSelectedScenario(e.target.value),className:\"px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Scenarios\"}),scenarios.map(scenario=>/*#__PURE__*/_jsx(\"option\",{value:scenario.name,children:scenario.label},scenario.name))]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6\",children:summaryMetrics.map(summary=>/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full\",style:{backgroundColor:summary.color}}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-gray-900 dark:text-white\",children:summary.label})]}),summary.overBudget&&/*#__PURE__*/_jsx(ExclamationTriangleIcon,{className:\"h-5 w-5 text-red-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:[\"$\",summary.totalCost.toFixed(2)]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Projected monthly cost\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Daily average\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-gray-900 dark:text-white\",children:[\"$\",summary.avgDailyCost.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Budget usage\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium \".concat(summary.overBudget?'text-red-600 dark:text-red-400':'text-green-600 dark:text-green-400'),children:[summary.budgetUtilization.toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full transition-all duration-500 \".concat(summary.overBudget?'bg-red-500':'bg-green-500'),style:{width:\"\".concat(Math.min(summary.budgetUtilization,100),\"%\")}})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:summary.description})]})]},summary.name))}),/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-6\",children:[/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-5 w-5 text-gray-600 dark:text-gray-400\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Cost Projection Trends\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"h-[400px]\",children:projections.length>0?/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions}):/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-12 w-12 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Insufficient data for projections\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-2\",children:\"Need at least 7 days of historical data\"})]})})})]}),/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(InformationCircleIcon,{className:\"h-5 w-5 text-blue-600 dark:text-blue-400\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Key Insights\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 dark:text-white mb-2\",children:\"Trend Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:summaryMetrics.map(summary=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full\",style:{backgroundColor:summary.color}}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:summary.label})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[summary.budgetUtilization>100?/*#__PURE__*/_jsx(ArrowTrendingUpIcon,{className:\"h-4 w-4 text-red-500\"}):/*#__PURE__*/_jsx(ArrowTrendingDownIcon,{className:\"h-4 w-4 text-green-500\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-gray-900 dark:text-white\",children:[summary.budgetUtilization.toFixed(0),\"%\"]})]})]},summary.name))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 dark:text-white mb-2\",children:\"Recommendations\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 text-sm text-gray-600 dark:text-gray-400\",children:[summaryMetrics.some(s=>s.overBudget)&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-2\",children:[/*#__PURE__*/_jsx(ExclamationTriangleIcon,{className:\"h-4 w-4 text-red-500 mt-0.5 flex-shrink-0\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Consider budget increase or usage optimization\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-2\",children:[/*#__PURE__*/_jsx(ClockIcon,{className:\"h-4 w-4 text-blue-500 mt-0.5 flex-shrink-0\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Monitor daily usage patterns for early detection\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-2\",children:[/*#__PURE__*/_jsx(CurrencyDollarIcon,{className:\"h-4 w-4 text-green-500 mt-0.5 flex-shrink-0\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Review cost optimization opportunities weekly\"})]})]})]})]})]})]});};export default CostProjections;","map":{"version":3,"names":["React","useMemo","useState","motion","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","Line","format","addDays","startOfMonth","endOfMonth","ArrowTrendingUpIcon","ArrowTrendingDownIcon","ClockIcon","ExclamationTriangleIcon","InformationCircleIcon","ChartBarIcon","CurrencyDollarIcon","jsx","_jsx","jsxs","_jsxs","register","CostProjections","_ref","historicalData","monthlyBudget","className","selectedScenario","setSelectedScenario","projectionPeriod","setProjectionPeriod","scenarios","name","label","color","multiplier","description","projections","length","today","Date","monthStart","monthEnd","recentDays","slice","avgRecentCost","reduce","sum","day","cost","firstHalf","Math","floor","secondHalf","firstHalfAvg","secondHalfAvg","growthRate","dailyGrowthRate","daysToProject","projectionData","i","projectionDate","forEach","scenario","baseProjection","scenarioProjection","variance","random","projectedCost","max","confidence","push","date","summaryMetrics","monthlyProjections","filter","p","index","scenarioSummaries","map","scenarioData","totalCost","avgDailyCost","_objectSpread","budgetUtilization","overBudget","chartData","filteredProjections","datasets","sort","a","b","getTime","data","x","y","borderColor","backgroundColor","replace","tension","fill","pointRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","position","labels","usePointStyle","pointStyle","tooltip","mode","intersect","titleColor","bodyColor","borderWidth","cornerRadius","callbacks","title","context","parsed","concat","dataset","toFixed","scales","type","time","unit","displayFormats","grid","drawBorder","ticks","maxTicksLimit","beginAtZero","callback","value","interaction","axis","animation","duration","easing","periodOptions","children","period","onClick","onChange","e","target","summary","div","initial","opacity","animate","style","width","min","options","some","s"],"sources":["/Users/james/Documents/Product-RD/brAIn/frontend/src/components/Cost/CostProjections.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { format, addDays, startOfMonth, endOfMonth, differenceInDays } from 'date-fns';\nimport {\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  CalendarIcon,\n  ClockIcon,\n  ExclamationTriangleIcon,\n  InformationCircleIcon,\n  ChartBarIcon,\n  CurrencyDollarIcon,\n} from '@heroicons/react/24/outline';\nimport { DailyCost } from '../../types';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\ninterface ProjectionData {\n  date: string;\n  actualCost?: number;\n  projectedCost: number;\n  confidence: 'high' | 'medium' | 'low';\n  scenario: 'conservative' | 'realistic' | 'optimistic';\n}\n\ninterface CostProjectionsProps {\n  historicalData: DailyCost[];\n  monthlyBudget: number;\n  className?: string;\n}\n\ninterface ProjectionScenario {\n  name: string;\n  label: string;\n  color: string;\n  multiplier: number;\n  description: string;\n}\n\nexport const CostProjections: React.FC<CostProjectionsProps> = ({\n  historicalData,\n  monthlyBudget,\n  className = '',\n}) => {\n  const [selectedScenario, setSelectedScenario] = useState<'all' | 'conservative' | 'realistic' | 'optimistic'>('all');\n  const [projectionPeriod, setProjectionPeriod] = useState<'month' | 'quarter' | 'year'>('month');\n\n  const scenarios: ProjectionScenario[] = [\n    {\n      name: 'conservative',\n      label: 'Conservative',\n      color: 'rgb(34, 197, 94)', // green\n      multiplier: 1.1,\n      description: 'Assumes minimal growth in usage',\n    },\n    {\n      name: 'realistic',\n      label: 'Realistic',\n      color: 'rgb(59, 130, 246)', // blue\n      multiplier: 1.25,\n      description: 'Based on current trends',\n    },\n    {\n      name: 'optimistic',\n      label: 'Optimistic',\n      color: 'rgb(239, 68, 68)', // red\n      multiplier: 1.4,\n      description: 'Assumes increased usage patterns',\n    },\n  ];\n\n  // Generate projections based on historical data\n  const projections = useMemo(() => {\n    if (!historicalData || historicalData.length === 0) return [];\n\n    const today = new Date();\n    const monthStart = startOfMonth(today);\n    const monthEnd = endOfMonth(today);\n    \n    // Calculate trend from historical data\n    const recentDays = historicalData.slice(-7); // Last 7 days\n    const avgRecentCost = recentDays.reduce((sum, day) => sum + day.cost, 0) / recentDays.length;\n    \n    // Calculate growth rate\n    const firstHalf = historicalData.slice(0, Math.floor(historicalData.length / 2));\n    const secondHalf = historicalData.slice(Math.floor(historicalData.length / 2));\n    const firstHalfAvg = firstHalf.reduce((sum, day) => sum + day.cost, 0) / firstHalf.length;\n    const secondHalfAvg = secondHalf.reduce((sum, day) => sum + day.cost, 0) / secondHalf.length;\n    \n    const growthRate = secondHalfAvg > 0 ? (secondHalfAvg - firstHalfAvg) / firstHalfAvg : 0;\n    const dailyGrowthRate = growthRate / secondHalf.length;\n\n    const daysToProject = projectionPeriod === 'month' ? 30 : \n                         projectionPeriod === 'quarter' ? 90 : 365;\n\n    const projectionData: ProjectionData[] = [];\n\n    for (let i = 0; i <= daysToProject; i++) {\n      const projectionDate = format(addDays(today, i), 'yyyy-MM-dd');\n      \n      scenarios.forEach((scenario) => {\n        // Apply scenario multiplier and growth rate\n        const baseProjection = avgRecentCost * (1 + dailyGrowthRate * i);\n        const scenarioProjection = baseProjection * scenario.multiplier;\n        \n        // Add some variance for realism\n        const variance = Math.random() * 0.1 - 0.05; // Â±5% variance\n        const projectedCost = Math.max(0, scenarioProjection * (1 + variance));\n        \n        // Determine confidence based on distance from today\n        let confidence: 'high' | 'medium' | 'low';\n        if (i <= 7) confidence = 'high';\n        else if (i <= 30) confidence = 'medium';\n        else confidence = 'low';\n\n        projectionData.push({\n          date: projectionDate,\n          projectedCost,\n          confidence,\n          scenario: scenario.name as 'conservative' | 'realistic' | 'optimistic',\n        });\n      });\n    }\n\n    return projectionData;\n  }, [historicalData, projectionPeriod]);\n\n  // Calculate summary metrics\n  const summaryMetrics = useMemo(() => {\n    const monthlyProjections = projections.filter((p, index) => index < 90); // ~30 days * 3 scenarios\n    \n    const scenarioSummaries = scenarios.map((scenario) => {\n      const scenarioData = monthlyProjections.filter(p => p.scenario === scenario.name);\n      const totalCost = scenarioData.reduce((sum, p) => sum + p.projectedCost, 0);\n      const avgDailyCost = totalCost / (scenarioData.length || 1);\n      \n      return {\n        ...scenario,\n        totalCost,\n        avgDailyCost,\n        budgetUtilization: (totalCost / monthlyBudget) * 100,\n        overBudget: totalCost > monthlyBudget,\n      };\n    });\n\n    return scenarioSummaries;\n  }, [projections, monthlyBudget, scenarios]);\n\n  // Prepare chart data\n  const chartData = useMemo(() => {\n    const filteredProjections = selectedScenario === 'all' \n      ? projections\n      : projections.filter(p => p.scenario === selectedScenario);\n\n    // Group by scenario for chart\n    const datasets = scenarios\n      .filter(scenario => selectedScenario === 'all' || scenario.name === selectedScenario)\n      .map((scenario) => {\n        const scenarioData = filteredProjections\n          .filter(p => p.scenario === scenario.name)\n          .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n\n        return {\n          label: scenario.label,\n          data: scenarioData.map(p => ({\n            x: p.date,\n            y: p.projectedCost,\n          })),\n          borderColor: scenario.color,\n          backgroundColor: scenario.color.replace('rgb', 'rgba').replace(')', ', 0.1)'),\n          tension: 0.4,\n          fill: false,\n          pointRadius: 0,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: scenario.color,\n          pointHoverBorderColor: 'white',\n          pointHoverBorderWidth: 2,\n        };\n      });\n\n    return {\n      datasets,\n    };\n  }, [projections, scenarios, selectedScenario]);\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top' as const,\n        labels: {\n          color: 'rgb(107, 114, 128)',\n          usePointStyle: true,\n          pointStyle: 'circle',\n        },\n      },\n      tooltip: {\n        mode: 'index' as const,\n        intersect: false,\n        backgroundColor: 'rgba(17, 24, 39, 0.95)',\n        titleColor: 'rgb(243, 244, 246)',\n        bodyColor: 'rgb(209, 213, 219)',\n        borderColor: 'rgb(75, 85, 99)',\n        borderWidth: 1,\n        cornerRadius: 8,\n        callbacks: {\n          title: (context: any) => {\n            return format(new Date(context[0].parsed.x), 'MMM dd, yyyy');\n          },\n          label: (context: any) => {\n            return `${context.dataset.label}: $${context.parsed.y.toFixed(2)}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: 'time' as const,\n        time: {\n          unit: 'day' as const,\n          displayFormats: {\n            day: 'MMM dd',\n          },\n        },\n        grid: {\n          color: 'rgba(107, 114, 128, 0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          color: 'rgb(107, 114, 128)',\n          maxTicksLimit: 8,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(107, 114, 128, 0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          color: 'rgb(107, 114, 128)',\n          callback: function(value: any) {\n            return `$${value.toFixed(2)}`;\n          },\n        },\n      },\n    },\n    interaction: {\n      mode: 'nearest' as const,\n      axis: 'x' as const,\n      intersect: false,\n    },\n    animation: {\n      duration: 1000,\n      easing: 'easeInOutQuart' as const,\n    },\n  };\n\n  const periodOptions = [\n    { value: 'month', label: '30 Days' },\n    { value: 'quarter', label: '90 Days' },\n    { value: 'year', label: '1 Year' },\n  ] as const;\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header Controls */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            Cost Projections & Trends\n          </h3>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n            Predictive analysis based on historical usage patterns\n          </p>\n        </div>\n\n        <div className=\"flex items-center gap-3\">\n          {/* Period Selector */}\n          <div className=\"flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1\">\n            {periodOptions.map((period) => (\n              <button\n                key={period.value}\n                onClick={() => setProjectionPeriod(period.value)}\n                className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${\n                  projectionPeriod === period.value\n                    ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-white shadow-sm'\n                    : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white'\n                }`}\n              >\n                {period.label}\n              </button>\n            ))}\n          </div>\n\n          {/* Scenario Selector */}\n          <select\n            value={selectedScenario}\n            onChange={(e) => setSelectedScenario(e.target.value as typeof selectedScenario)}\n            className=\"px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"all\">All Scenarios</option>\n            {scenarios.map((scenario) => (\n              <option key={scenario.name} value={scenario.name}>\n                {scenario.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {summaryMetrics.map((summary) => (\n          <motion.div\n            key={summary.name}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\"\n          >\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center gap-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full\"\n                  style={{ backgroundColor: summary.color }}\n                />\n                <h4 className=\"font-semibold text-gray-900 dark:text-white\">\n                  {summary.label}\n                </h4>\n              </div>\n              {summary.overBudget && (\n                <ExclamationTriangleIcon className=\"h-5 w-5 text-red-500\" />\n              )}\n            </div>\n\n            <div className=\"space-y-3\">\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  ${summary.totalCost.toFixed(2)}\n                </p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Projected monthly cost\n                </p>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Daily average\n                </span>\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  ${summary.avgDailyCost.toFixed(2)}\n                </span>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Budget usage\n                </span>\n                <span className={`text-sm font-medium ${\n                  summary.overBudget \n                    ? 'text-red-600 dark:text-red-400'\n                    : 'text-green-600 dark:text-green-400'\n                }`}>\n                  {summary.budgetUtilization.toFixed(1)}%\n                </span>\n              </div>\n\n              <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                <div\n                  className={`h-2 rounded-full transition-all duration-500 ${\n                    summary.overBudget ? 'bg-red-500' : 'bg-green-500'\n                  }`}\n                  style={{ \n                    width: `${Math.min(summary.budgetUtilization, 100)}%` \n                  }}\n                />\n              </div>\n\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {summary.description}\n              </p>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Projection Chart */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\"\n      >\n        <div className=\"flex items-center gap-2 mb-6\">\n          <ChartBarIcon className=\"h-5 w-5 text-gray-600 dark:text-gray-400\" />\n          <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            Cost Projection Trends\n          </h4>\n        </div>\n\n        <div className=\"h-[400px]\">\n          {projections.length > 0 ? (\n            <Line data={chartData} options={chartOptions} />\n          ) : (\n            <div className=\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400\">\n              <div className=\"text-center\">\n                <ChartBarIcon className=\"h-12 w-12 mx-auto mb-4\" />\n                <p>Insufficient data for projections</p>\n                <p className=\"text-sm mt-2\">Need at least 7 days of historical data</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </motion.div>\n\n      {/* Key Insights */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\"\n      >\n        <div className=\"flex items-center gap-2 mb-4\">\n          <InformationCircleIcon className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\n          <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            Key Insights\n          </h4>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h5 className=\"font-medium text-gray-900 dark:text-white mb-2\">\n              Trend Analysis\n            </h5>\n            <div className=\"space-y-2\">\n              {summaryMetrics.map((summary) => (\n                <div key={summary.name} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <div \n                      className=\"w-2 h-2 rounded-full\"\n                      style={{ backgroundColor: summary.color }}\n                    />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {summary.label}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {summary.budgetUtilization > 100 ? (\n                      <ArrowTrendingUpIcon className=\"h-4 w-4 text-red-500\" />\n                    ) : (\n                      <ArrowTrendingDownIcon className=\"h-4 w-4 text-green-500\" />\n                    )}\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {summary.budgetUtilization.toFixed(0)}%\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <h5 className=\"font-medium text-gray-900 dark:text-white mb-2\">\n              Recommendations\n            </h5>\n            <div className=\"space-y-2 text-sm text-gray-600 dark:text-gray-400\">\n              {summaryMetrics.some(s => s.overBudget) && (\n                <div className=\"flex items-start gap-2\">\n                  <ExclamationTriangleIcon className=\"h-4 w-4 text-red-500 mt-0.5 flex-shrink-0\" />\n                  <span>Consider budget increase or usage optimization</span>\n                </div>\n              )}\n              <div className=\"flex items-start gap-2\">\n                <ClockIcon className=\"h-4 w-4 text-blue-500 mt-0.5 flex-shrink-0\" />\n                <span>Monitor daily usage patterns for early detection</span>\n              </div>\n              <div className=\"flex items-start gap-2\">\n                <CurrencyDollarIcon className=\"h-4 w-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                <span>Review cost optimization opportunities weekly</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default CostProjections;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
[tool.poetry]
name = "brain-v2"
version = "2.0.0"
description = "AI-enhanced RAG Pipeline Management System with real-time monitoring, cost optimization, and knowledge graph capabilities"
authors = ["brAIn Development Team"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"

# FastAPI and web framework dependencies
fastapi = "^0.117.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
websockets = "^13.0"
starlette = "^0.45.3"

# Pydantic for data validation
pydantic = "^2.5.0"
# pydantic-ai = "^1.0.0"  # Not used in codebase, removed for dependency resolution
pydantic-settings = "^2.1.0"

# Database dependencies
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.0"
pgvector = "^0.2.4"

# Supabase and real-time
supabase = "^2.3.4"
realtime = "^2.5.0"  # Updated for websockets 13+ compatibility

# OpenAI and AI services
openai = "^1.6.1"
langfuse = "^2.21.0"
tiktoken = "^0.5.2"

# Google Drive integration
google-auth = "^2.25.2"
google-auth-oauthlib = "^1.1.0"
google-auth-httplib2 = "^0.2.0"
google-api-python-client = "^2.111.0"

# Document processing
PyPDF2 = "^3.0.1"
python-docx = "^1.1.0"
openpyxl = "^3.1.2"
python-pptx = "^0.6.23"
beautifulsoup4 = "^4.12.2"
markdown = "^3.5.1"
ebooklib = "^0.18"
striprtf = "^0.0.26"

# Redis for caching
redis = "^5.0.1"
aioredis = "^2.0.1"

# HTTP client
httpx = "^0.28.1"
aiofiles = "^23.2.1"

# Utilities
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-dotenv = "^1.0.0"
typer = "^0.9.0"
rich = "^13.7.0"

# Monitoring and observability
prometheus-client = "^0.19.0"
structlog = "^23.2.0"

# Data processing
numpy = "^1.25.2"
pandas = "^2.1.4"
scikit-learn = "^1.3.2"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
httpx = "^0.28.1"

# Code quality
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"

# Development tools
jupyter = "^1.0.0"
ipython = "^8.17.2"

[tool.poetry.scripts]
brain = "src.cli:app"
brain-server = "main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "models", "api", "config"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "supabase.*",
    "realtime.*",
    "langfuse.*",
    "pgvector.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src", "models", "api", "config"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
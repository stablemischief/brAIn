[tool:pytest]
# Pytest configuration
minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Coverage settings
addopts =
    --verbose
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-config=.coveragerc
    --tb=short
    --strict-markers
    -p no:warnings

# Async settings
asyncio_mode = auto

# Markers
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test component interactions
    e2e: End-to-end tests that test complete workflows
    performance: Performance and load tests
    slow: Tests that take > 1 second to run
    ai: Tests that require AI service mocks

# Test output
console_output_style = progress
junit_family = xunit2

# Ignore patterns
norecursedirs = .git .tox dist build *.egg node_modules frontend .venv venv

# Coverage exclusions
[coverage:run]
source = .
omit =
    tests/*
    */test_*.py
    */__pycache__/*
    venv/*
    .venv/*
    frontend/*
    node_modules/*
    htmlcov/*
    .pytest_cache/*
    */migrations/*
    */config/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
    @abstractmethod
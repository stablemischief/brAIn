{"ast":null,"code":"import _objectSpread from\"/Users/james/Documents/Product-RD/brAIn/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useRef,useEffect,useState,useCallback}from'react';import*as d3 from'd3';import{DEFAULT_GRAPH_CONFIG,DEFAULT_COLOR_SCHEME}from'../../types/graph';import GraphControls from'./GraphControls';import GraphSearch from'./GraphSearch';import GraphLegend from'./GraphLegend';import NodeInfoPanel from'./NodeInfoPanel';import{useGraphData}from'../../hooks/useGraphData';import LoadingSpinner from'../LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const KnowledgeGraph=_ref=>{let{className='',initialFilters={},config:userConfig={},onNodeSelect,onEdgeSelect}=_ref;const svgRef=useRef(null);const containerRef=useRef(null);const simulationRef=useRef(null);const[dimensions,setDimensions]=useState({width:800,height:600});const[selection,setSelection]=useState({selectedNodes:new Set(),selectedEdges:new Set()});const[filters,setFilters]=useState(initialFilters);const[transform,setTransform]=useState(d3.zoomIdentity);const config=_objectSpread(_objectSpread({},DEFAULT_GRAPH_CONFIG),userConfig);const{data,loading,error,refetch}=useGraphData(filters);// Update dimensions on container resize\nuseEffect(()=>{const updateDimensions=()=>{if(containerRef.current){const{width,height}=containerRef.current.getBoundingClientRect();setDimensions({width,height});}};updateDimensions();const resizeObserver=new ResizeObserver(updateDimensions);if(containerRef.current){resizeObserver.observe(containerRef.current);}return()=>resizeObserver.disconnect();},[]);// Initialize and update D3 force simulation\nuseEffect(()=>{if(!svgRef.current||!data||loading)return;const svg=d3.select(svgRef.current);svg.selectAll('*').remove();// Create container groups\nconst g=svg.append('g').attr('class','graph-container');// Add zoom behavior\nconst zoom=d3.zoom().scaleExtent([config.zoomMin||0.1,config.zoomMax||10]).on('zoom',event=>{g.attr('transform',event.transform);setTransform(event.transform);});svg.call(zoom);// Create arrow markers for directed edges\nconst defs=svg.append('defs');defs.append('marker').attr('id','arrow').attr('viewBox','0 -5 10 10').attr('refX',20).attr('refY',0).attr('markerWidth',8).attr('markerHeight',8).attr('orient','auto').append('path').attr('d','M0,-5L10,0L0,5').attr('fill',DEFAULT_COLOR_SCHEME.edge);// Create force simulation\nconst simulation=d3.forceSimulation(data.nodes).force('link',d3.forceLink(data.edges).id(d=>d.id).distance(config.linkDistance||100).strength(config.linkStrength||0.5)).force('charge',d3.forceManyBody().strength(config.chargeStrength||-300)).force('center',d3.forceCenter(dimensions.width/2,dimensions.height/2).strength(config.centerForce||0.05)).force('collision',d3.forceCollide().radius(config.collisionRadius||30));simulationRef.current=simulation;// Create edge elements\nconst edges=g.append('g').attr('class','edges').selectAll('line').data(data.edges).join('line').attr('stroke',DEFAULT_COLOR_SCHEME.edge).attr('stroke-width',d=>Math.sqrt(d.weight||1)).attr('stroke-opacity',config.edgeOpacity||0.6).attr('marker-end','url(#arrow)').on('click',(event,d)=>{event.stopPropagation();handleEdgeClick(d);}).on('mouseenter',(event,d)=>{setSelection(prev=>_objectSpread(_objectSpread({},prev),{},{hoveredEdge:d.id}));}).on('mouseleave',()=>{setSelection(prev=>_objectSpread(_objectSpread({},prev),{},{hoveredEdge:undefined}));});// Create node elements\nconst nodes=g.append('g').attr('class','nodes').selectAll('circle').data(data.nodes).join('circle').attr('r',d=>calculateNodeRadius(d)).attr('fill',d=>getNodeColor(d)).attr('stroke','#fff').attr('stroke-width',2).style('cursor','pointer').on('click',(event,d)=>{event.stopPropagation();handleNodeClick(d);}).on('mouseenter',(event,d)=>{setSelection(prev=>_objectSpread(_objectSpread({},prev),{},{hoveredNode:d.id}));showTooltip(event,d);}).on('mouseleave',()=>{setSelection(prev=>_objectSpread(_objectSpread({},prev),{},{hoveredNode:undefined}));hideTooltip();}).call(d3.drag().on('start',dragStarted).on('drag',dragged).on('end',dragEnded));// Create labels if enabled\nif(config.showLabels){const labels=g.append('g').attr('class','labels').selectAll('text').data(data.nodes).join('text').text(d=>d.label).attr('font-size',12).attr('fill',DEFAULT_COLOR_SCHEME.text).attr('text-anchor','middle').attr('dy',-15).style('pointer-events','none').style('user-select','none');// Update label positions on simulation tick\nsimulation.on('tick.labels',()=>{labels.attr('x',d=>d.x||0).attr('y',d=>d.y||0);});}// Update positions on simulation tick\nsimulation.on('tick',()=>{edges.attr('x1',d=>d.source.x||0).attr('y1',d=>d.source.y||0).attr('x2',d=>d.target.x||0).attr('y2',d=>d.target.y||0);nodes.attr('cx',d=>d.x||0).attr('cy',d=>d.y||0);});// Drag functions\nfunction dragStarted(event,d){if(!event.active)simulation.alphaTarget(0.3).restart();d.fx=d.x;d.fy=d.y;}function dragged(event,d){d.fx=event.x;d.fy=event.y;}function dragEnded(event,d){if(!event.active)simulation.alphaTarget(0);d.fx=null;d.fy=null;}return()=>{simulation.stop();};},[data,dimensions,config,loading]);const calculateNodeRadius=node=>{var _node$metadata;const baseRadius=config.nodeRadius||8;const scaleFactor=((_node$metadata=node.metadata)===null||_node$metadata===void 0?void 0:_node$metadata.confidence)||1;return Math.max(config.nodeMinRadius||4,Math.min(config.nodeMaxRadius||20,baseRadius*scaleFactor));};const getNodeColor=node=>{if(selection.selectedNodes.has(node.id)){return DEFAULT_COLOR_SCHEME.selectedNode;}if(selection.hoveredNode===node.id){return DEFAULT_COLOR_SCHEME.hoveredNode;}return DEFAULT_COLOR_SCHEME[node.type]||DEFAULT_COLOR_SCHEME.entity;};const handleNodeClick=useCallback(node=>{setSelection(prev=>{const newSelection=new Set(prev.selectedNodes);if(newSelection.has(node.id)){newSelection.delete(node.id);}else{newSelection.add(node.id);}return _objectSpread(_objectSpread({},prev),{},{selectedNodes:newSelection});});onNodeSelect===null||onNodeSelect===void 0?void 0:onNodeSelect(node);},[onNodeSelect]);const handleEdgeClick=useCallback(edge=>{setSelection(prev=>{const newSelection=new Set(prev.selectedEdges);if(newSelection.has(edge.id)){newSelection.delete(edge.id);}else{newSelection.add(edge.id);}return _objectSpread(_objectSpread({},prev),{},{selectedEdges:newSelection});});onEdgeSelect===null||onEdgeSelect===void 0?void 0:onEdgeSelect(edge);},[onEdgeSelect]);const showTooltip=(event,node)=>{// Tooltip implementation would go here\nconsole.log('Show tooltip for',node);};const hideTooltip=()=>{// Hide tooltip implementation\n};const handleSearch=query=>{setFilters(prev=>_objectSpread(_objectSpread({},prev),{},{searchQuery:query}));};const handleFilterChange=newFilters=>{setFilters(newFilters);};const handleZoomIn=()=>{if(!svgRef.current)return;const svg=d3.select(svgRef.current);svg.transition().duration(300).call(d3.zoom().scaleBy,1.3);};const handleZoomOut=()=>{if(!svgRef.current)return;const svg=d3.select(svgRef.current);svg.transition().duration(300).call(d3.zoom().scaleBy,0.7);};const handleZoomReset=()=>{if(!svgRef.current)return;const svg=d3.select(svgRef.current);svg.transition().duration(300).call(d3.zoom().transform,d3.zoomIdentity);};const handleRefresh=()=>{refetch();};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-red-500\",children:[\"Error loading graph data: \",error]})});}const selectedNode=data===null||data===void 0?void 0:data.nodes.find(n=>selection.selectedNodes.has(n.id));return/*#__PURE__*/_jsxs(\"div\",{ref:containerRef,className:\"relative w-full h-full bg-gray-900 \".concat(className),children:[/*#__PURE__*/_jsx(\"svg\",{ref:svgRef,width:dimensions.width,height:dimensions.height,className:\"w-full h-full\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute top-4 left-4 space-y-4\",children:[/*#__PURE__*/_jsx(GraphSearch,{onSearch:handleSearch}),/*#__PURE__*/_jsx(GraphControls,{onZoomIn:handleZoomIn,onZoomOut:handleZoomOut,onZoomReset:handleZoomReset,onRefresh:handleRefresh,currentZoom:transform.k})]}),config.showLegend&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 right-4\",children:/*#__PURE__*/_jsx(GraphLegend,{})}),selectedNode&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-4 right-4 w-80\",children:/*#__PURE__*/_jsx(NodeInfoPanel,{node:selectedNode,onClose:()=>setSelection(prev=>_objectSpread(_objectSpread({},prev),{},{selectedNodes:new Set()}))})})]});};export default KnowledgeGraph;","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","d3","DEFAULT_GRAPH_CONFIG","DEFAULT_COLOR_SCHEME","GraphControls","GraphSearch","GraphLegend","NodeInfoPanel","useGraphData","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","KnowledgeGraph","_ref","className","initialFilters","config","userConfig","onNodeSelect","onEdgeSelect","svgRef","containerRef","simulationRef","dimensions","setDimensions","width","height","selection","setSelection","selectedNodes","Set","selectedEdges","filters","setFilters","transform","setTransform","zoomIdentity","_objectSpread","data","loading","error","refetch","updateDimensions","current","getBoundingClientRect","resizeObserver","ResizeObserver","observe","disconnect","svg","select","selectAll","remove","g","append","attr","zoom","scaleExtent","zoomMin","zoomMax","on","event","call","defs","edge","simulation","forceSimulation","nodes","force","forceLink","edges","id","d","distance","linkDistance","strength","linkStrength","forceManyBody","chargeStrength","forceCenter","centerForce","forceCollide","radius","collisionRadius","join","Math","sqrt","weight","edgeOpacity","stopPropagation","handleEdgeClick","prev","hoveredEdge","undefined","calculateNodeRadius","getNodeColor","style","handleNodeClick","hoveredNode","showTooltip","hideTooltip","drag","dragStarted","dragged","dragEnded","showLabels","labels","text","label","x","y","source","target","active","alphaTarget","restart","fx","fy","stop","node","_node$metadata","baseRadius","nodeRadius","scaleFactor","metadata","confidence","max","nodeMinRadius","min","nodeMaxRadius","has","selectedNode","type","entity","newSelection","delete","add","console","log","handleSearch","query","searchQuery","handleFilterChange","newFilters","handleZoomIn","transition","duration","scaleBy","handleZoomOut","handleZoomReset","handleRefresh","children","find","n","ref","concat","onSearch","onZoomIn","onZoomOut","onZoomReset","onRefresh","currentZoom","k","showLegend","onClose"],"sources":["/Users/james/Documents/Product-RD/brAIn/frontend/src/components/KnowledgeGraph/KnowledgeGraph.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport {\n  GraphData,\n  GraphNode,\n  GraphEdge,\n  GraphConfig,\n  GraphSelection,\n  GraphFilters,\n  DEFAULT_GRAPH_CONFIG,\n  DEFAULT_COLOR_SCHEME,\n} from '../../types/graph';\nimport GraphControls from './GraphControls';\nimport GraphSearch from './GraphSearch';\nimport GraphLegend from './GraphLegend';\nimport NodeInfoPanel from './NodeInfoPanel';\nimport { useGraphData } from '../../hooks/useGraphData';\nimport LoadingSpinner from '../LoadingSpinner';\n\ninterface KnowledgeGraphProps {\n  className?: string;\n  initialFilters?: GraphFilters;\n  config?: Partial<GraphConfig>;\n  onNodeSelect?: (node: GraphNode) => void;\n  onEdgeSelect?: (edge: GraphEdge) => void;\n}\n\nconst KnowledgeGraph: React.FC<KnowledgeGraphProps> = ({\n  className = '',\n  initialFilters = {},\n  config: userConfig = {},\n  onNodeSelect,\n  onEdgeSelect,\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const simulationRef = useRef<d3.Simulation<GraphNode, GraphEdge> | null>(null);\n\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [selection, setSelection] = useState<GraphSelection>({\n    selectedNodes: new Set(),\n    selectedEdges: new Set(),\n  });\n  const [filters, setFilters] = useState<GraphFilters>(initialFilters);\n  const [transform, setTransform] = useState<d3.ZoomTransform>(d3.zoomIdentity);\n\n  const config = { ...DEFAULT_GRAPH_CONFIG, ...userConfig };\n  const { data, loading, error, refetch } = useGraphData(filters);\n\n  // Update dimensions on container resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n\n    updateDimensions();\n    const resizeObserver = new ResizeObserver(updateDimensions);\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    return () => resizeObserver.disconnect();\n  }, []);\n\n  // Initialize and update D3 force simulation\n  useEffect(() => {\n    if (!svgRef.current || !data || loading) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n\n    // Create container groups\n    const g = svg.append('g').attr('class', 'graph-container');\n\n    // Add zoom behavior\n    const zoom = d3.zoom<SVGSVGElement, unknown>()\n      .scaleExtent([config.zoomMin || 0.1, config.zoomMax || 10])\n      .on('zoom', (event) => {\n        g.attr('transform', event.transform);\n        setTransform(event.transform);\n      });\n\n    svg.call(zoom);\n\n    // Create arrow markers for directed edges\n    const defs = svg.append('defs');\n    defs.append('marker')\n      .attr('id', 'arrow')\n      .attr('viewBox', '0 -5 10 10')\n      .attr('refX', 20)\n      .attr('refY', 0)\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 8)\n      .attr('orient', 'auto')\n      .append('path')\n      .attr('d', 'M0,-5L10,0L0,5')\n      .attr('fill', DEFAULT_COLOR_SCHEME.edge);\n\n    // Create force simulation\n    const simulation = d3.forceSimulation<GraphNode>(data.nodes)\n      .force('link', d3.forceLink<GraphNode, GraphEdge>(data.edges)\n        .id(d => d.id)\n        .distance(config.linkDistance || 100)\n        .strength(config.linkStrength || 0.5))\n      .force('charge', d3.forceManyBody()\n        .strength(config.chargeStrength || -300))\n      .force('center', d3.forceCenter(dimensions.width / 2, dimensions.height / 2)\n        .strength(config.centerForce || 0.05))\n      .force('collision', d3.forceCollide()\n        .radius(config.collisionRadius || 30));\n\n    simulationRef.current = simulation;\n\n    // Create edge elements\n    const edges = g.append('g')\n      .attr('class', 'edges')\n      .selectAll('line')\n      .data(data.edges)\n      .join('line')\n      .attr('stroke', DEFAULT_COLOR_SCHEME.edge)\n      .attr('stroke-width', d => Math.sqrt(d.weight || 1))\n      .attr('stroke-opacity', config.edgeOpacity || 0.6)\n      .attr('marker-end', 'url(#arrow)')\n      .on('click', (event, d) => {\n        event.stopPropagation();\n        handleEdgeClick(d);\n      })\n      .on('mouseenter', (event, d) => {\n        setSelection(prev => ({ ...prev, hoveredEdge: d.id }));\n      })\n      .on('mouseleave', () => {\n        setSelection(prev => ({ ...prev, hoveredEdge: undefined }));\n      });\n\n    // Create node elements\n    const nodes = g.append('g')\n      .attr('class', 'nodes')\n      .selectAll('circle')\n      .data(data.nodes)\n      .join('circle')\n      .attr('r', d => calculateNodeRadius(d))\n      .attr('fill', d => getNodeColor(d))\n      .attr('stroke', '#fff')\n      .attr('stroke-width', 2)\n      .style('cursor', 'pointer')\n      .on('click', (event, d) => {\n        event.stopPropagation();\n        handleNodeClick(d);\n      })\n      .on('mouseenter', (event, d) => {\n        setSelection(prev => ({ ...prev, hoveredNode: d.id }));\n        showTooltip(event, d);\n      })\n      .on('mouseleave', () => {\n        setSelection(prev => ({ ...prev, hoveredNode: undefined }));\n        hideTooltip();\n      })\n      .call(d3.drag<SVGCircleElement, GraphNode>()\n        .on('start', dragStarted)\n        .on('drag', dragged)\n        .on('end', dragEnded));\n\n    // Create labels if enabled\n    if (config.showLabels) {\n      const labels = g.append('g')\n        .attr('class', 'labels')\n        .selectAll('text')\n        .data(data.nodes)\n        .join('text')\n        .text(d => d.label)\n        .attr('font-size', 12)\n        .attr('fill', DEFAULT_COLOR_SCHEME.text)\n        .attr('text-anchor', 'middle')\n        .attr('dy', -15)\n        .style('pointer-events', 'none')\n        .style('user-select', 'none');\n\n      // Update label positions on simulation tick\n      simulation.on('tick.labels', () => {\n        labels\n          .attr('x', d => d.x || 0)\n          .attr('y', d => d.y || 0);\n      });\n    }\n\n    // Update positions on simulation tick\n    simulation.on('tick', () => {\n      edges\n        .attr('x1', d => (d.source as GraphNode).x || 0)\n        .attr('y1', d => (d.source as GraphNode).y || 0)\n        .attr('x2', d => (d.target as GraphNode).x || 0)\n        .attr('y2', d => (d.target as GraphNode).y || 0);\n\n      nodes\n        .attr('cx', d => d.x || 0)\n        .attr('cy', d => d.y || 0);\n    });\n\n    // Drag functions\n    function dragStarted(event: d3.D3DragEvent<SVGCircleElement, GraphNode, GraphNode>, d: GraphNode) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(event: d3.D3DragEvent<SVGCircleElement, GraphNode, GraphNode>, d: GraphNode) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragEnded(event: d3.D3DragEvent<SVGCircleElement, GraphNode, GraphNode>, d: GraphNode) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    return () => {\n      simulation.stop();\n    };\n  }, [data, dimensions, config, loading]);\n\n  const calculateNodeRadius = (node: GraphNode): number => {\n    const baseRadius = config.nodeRadius || 8;\n    const scaleFactor = node.metadata?.confidence || 1;\n    return Math.max(\n      config.nodeMinRadius || 4,\n      Math.min(config.nodeMaxRadius || 20, baseRadius * scaleFactor)\n    );\n  };\n\n  const getNodeColor = (node: GraphNode): string => {\n    if (selection.selectedNodes.has(node.id)) {\n      return DEFAULT_COLOR_SCHEME.selectedNode;\n    }\n    if (selection.hoveredNode === node.id) {\n      return DEFAULT_COLOR_SCHEME.hoveredNode;\n    }\n    return DEFAULT_COLOR_SCHEME[node.type] || DEFAULT_COLOR_SCHEME.entity;\n  };\n\n  const handleNodeClick = useCallback((node: GraphNode) => {\n    setSelection(prev => {\n      const newSelection = new Set(prev.selectedNodes);\n      if (newSelection.has(node.id)) {\n        newSelection.delete(node.id);\n      } else {\n        newSelection.add(node.id);\n      }\n      return { ...prev, selectedNodes: newSelection };\n    });\n    onNodeSelect?.(node);\n  }, [onNodeSelect]);\n\n  const handleEdgeClick = useCallback((edge: GraphEdge) => {\n    setSelection(prev => {\n      const newSelection = new Set(prev.selectedEdges);\n      if (newSelection.has(edge.id)) {\n        newSelection.delete(edge.id);\n      } else {\n        newSelection.add(edge.id);\n      }\n      return { ...prev, selectedEdges: newSelection };\n    });\n    onEdgeSelect?.(edge);\n  }, [onEdgeSelect]);\n\n  const showTooltip = (event: MouseEvent, node: GraphNode) => {\n    // Tooltip implementation would go here\n    console.log('Show tooltip for', node);\n  };\n\n  const hideTooltip = () => {\n    // Hide tooltip implementation\n  };\n\n  const handleSearch = (query: string) => {\n    setFilters(prev => ({ ...prev, searchQuery: query }));\n  };\n\n  const handleFilterChange = (newFilters: GraphFilters) => {\n    setFilters(newFilters);\n  };\n\n  const handleZoomIn = () => {\n    if (!svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    svg.transition().duration(300).call(\n      d3.zoom<SVGSVGElement, unknown>().scaleBy as any,\n      1.3\n    );\n  };\n\n  const handleZoomOut = () => {\n    if (!svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    svg.transition().duration(300).call(\n      d3.zoom<SVGSVGElement, unknown>().scaleBy as any,\n      0.7\n    );\n  };\n\n  const handleZoomReset = () => {\n    if (!svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    svg.transition().duration(300).call(\n      d3.zoom<SVGSVGElement, unknown>().transform as any,\n      d3.zoomIdentity\n    );\n  };\n\n  const handleRefresh = () => {\n    refetch();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-red-500\">Error loading graph data: {error}</div>\n      </div>\n    );\n  }\n\n  const selectedNode = data?.nodes.find(n => selection.selectedNodes.has(n.id));\n\n  return (\n    <div ref={containerRef} className={`relative w-full h-full bg-gray-900 ${className}`}>\n      <svg\n        ref={svgRef}\n        width={dimensions.width}\n        height={dimensions.height}\n        className=\"w-full h-full\"\n      />\n\n      <div className=\"absolute top-4 left-4 space-y-4\">\n        <GraphSearch onSearch={handleSearch} />\n        <GraphControls\n          onZoomIn={handleZoomIn}\n          onZoomOut={handleZoomOut}\n          onZoomReset={handleZoomReset}\n          onRefresh={handleRefresh}\n          currentZoom={transform.k}\n        />\n      </div>\n\n      {config.showLegend && (\n        <div className=\"absolute top-4 right-4\">\n          <GraphLegend />\n        </div>\n      )}\n\n      {selectedNode && (\n        <div className=\"absolute bottom-4 right-4 w-80\">\n          <NodeInfoPanel\n            node={selectedNode}\n            onClose={() => setSelection(prev => ({\n              ...prev,\n              selectedNodes: new Set(),\n            }))}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default KnowledgeGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
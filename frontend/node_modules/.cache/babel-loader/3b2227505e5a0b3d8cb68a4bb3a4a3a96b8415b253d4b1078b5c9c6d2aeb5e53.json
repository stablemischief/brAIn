{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/james/Documents/Product-RD/brAIn/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/james/Documents/Product-RD/brAIn/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/james/Documents/Product-RD/brAIn/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nvar _online, _cleanup, _setup;\n// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = (_online = /*#__PURE__*/new WeakMap(), _cleanup = /*#__PURE__*/new WeakMap(), _setup = /*#__PURE__*/new WeakMap(), class OnlineManager extends Subscribable {\n  constructor() {\n    super();\n    _classPrivateFieldInitSpec(this, _online, true);\n    _classPrivateFieldInitSpec(this, _cleanup, void 0);\n    _classPrivateFieldInitSpec(this, _setup, void 0);\n    _classPrivateFieldSet(_setup, this, onOnline => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    });\n  }\n  onSubscribe() {\n    if (!_classPrivateFieldGet(_cleanup, this)) {\n      this.setEventListener(_classPrivateFieldGet(_setup, this));\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _classPrivateFieldGet2;\n      (_classPrivateFieldGet2 = _classPrivateFieldGet(_cleanup, this)) === null || _classPrivateFieldGet2 === void 0 || _classPrivateFieldGet2.call(this);\n      _classPrivateFieldSet(_cleanup, this, void 0);\n    }\n  }\n  setEventListener(setup) {\n    var _classPrivateFieldGet3;\n    _classPrivateFieldSet(_setup, this, setup);\n    (_classPrivateFieldGet3 = _classPrivateFieldGet(_cleanup, this)) === null || _classPrivateFieldGet3 === void 0 || _classPrivateFieldGet3.call(this);\n    _classPrivateFieldSet(_cleanup, this, setup(this.setOnline.bind(this)));\n  }\n  setOnline(online) {\n    const changed = _classPrivateFieldGet(_online, this) !== online;\n    if (changed) {\n      _classPrivateFieldSet(_online, this, online);\n      this.listeners.forEach(listener => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return _classPrivateFieldGet(_online, this);\n  }\n});\nvar onlineManager = new OnlineManager();\nexport { OnlineManager, onlineManager };","map":{"version":3,"names":["Subscribable","isServer","OnlineManager","_online","WeakMap","_cleanup","_setup","constructor","_classPrivateFieldInitSpec","_classPrivateFieldSet","onOnline","window","addEventListener","onlineListener","offlineListener","removeEventListener","onSubscribe","_classPrivateFieldGet","setEventListener","onUnsubscribe","hasListeners","_classPrivateFieldGet2","call","setup","_classPrivateFieldGet3","setOnline","bind","online","changed","listeners","forEach","listener","isOnline","onlineManager"],"sources":["/Users/james/Documents/Product-RD/brAIn/frontend/node_modules/@tanstack/query-core/src/onlineManager.ts"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n"],"mappings":";;;;;AAAA,SAASA,YAAA,QAAoB;AAC7B,SAASC,QAAA,QAAgB;AAKlB,IAAMC,aAAA,IAAAC,OAAA,oBAAAC,OAAA,IAAAC,QAAA,oBAAAD,OAAA,IAAAE,MAAA,oBAAAF,OAAA,IAAN,MAAMF,aAAA,SAAsBF,YAAA,CAAuB;EAMxDO,YAAA,EAAc;IACZ,MAAM;IANRC,0BAAA,OAAAL,OAAA,EAAU;IACVK,0BAAA,OAAAH,QAAA;IAEAG,0BAAA,OAAAF,MAAA;IAIEG,qBAAA,CAAKH,MAAA,EAAL,MAAeI,QAAA,IAAa;MAG1B,IAAI,CAACT,QAAA,IAAYU,MAAA,CAAOC,gBAAA,EAAkB;QACxC,MAAMC,cAAA,GAAiBA,CAAA,KAAMH,QAAA,CAAS,IAAI;QAC1C,MAAMI,eAAA,GAAkBA,CAAA,KAAMJ,QAAA,CAAS,KAAK;QAE5CC,MAAA,CAAOC,gBAAA,CAAiB,UAAUC,cAAA,EAAgB,KAAK;QACvDF,MAAA,CAAOC,gBAAA,CAAiB,WAAWE,eAAA,EAAiB,KAAK;QAEzD,OAAO,MAAM;UAEXH,MAAA,CAAOI,mBAAA,CAAoB,UAAUF,cAAc;UACnDF,MAAA,CAAOI,mBAAA,CAAoB,WAAWD,eAAe;QACvD;MACF;MAEA;IACF,CAlBK;EAmBP;EAEUE,YAAA,EAAoB;IAC5B,IAAI,CAACC,qBAAA,CAAKZ,QAAA,EAAL,IAAK,GAAU;MAClB,KAAKa,gBAAA,CAAiBD,qBAAA,CAAKX,MAAM,EAAX,IAAK,CAAM;IACnC;EACF;EAEUa,cAAA,EAAgB;IACxB,IAAI,CAAC,KAAKC,YAAA,CAAa,GAAG;MAAA,IAAAC,sBAAA;MACxB,CAAAA,sBAAA,GAAAJ,qBAAA,CAAKZ,QAAA,EAAL,IAAK,eAAAgB,sBAAA,eAAAA,sBAAA,CAAAC,IAAA,CAAL;MACAb,qBAAA,CAAKJ,QAAA,EAAL,MAAgB,MAAX;IACP;EACF;EAEAa,iBAAiBK,KAAA,EAAsB;IAAA,IAAAC,sBAAA;IACrCf,qBAAA,CAAKH,MAAA,EAAL,MAAciB,KAAT;IACL,CAAAC,sBAAA,GAAAP,qBAAA,CAAKZ,QAAA,EAAL,IAAK,eAAAmB,sBAAA,eAAAA,sBAAA,CAAAF,IAAA,CAAL;IACAb,qBAAA,CAAKJ,QAAA,EAAL,MAAgBkB,KAAA,CAAM,KAAKE,SAAA,CAAUC,IAAA,CAAK,IAAI,CAAC,CAA1C;EACP;EAEAD,UAAUE,MAAA,EAAuB;IAC/B,MAAMC,OAAA,GAAUX,qBAAA,CAAKd,OAAA,EAAL,IAAK,MAAYwB,MAAA;IAEjC,IAAIC,OAAA,EAAS;MACXnB,qBAAA,CAAKN,OAAA,EAAL,MAAewB,MAAV;MACL,KAAKE,SAAA,CAAUC,OAAA,CAASC,QAAA,IAAa;QACnCA,QAAA,CAASJ,MAAM;MACjB,CAAC;IACH;EACF;EAEAK,SAAA,EAAoB;IAClB,OAAOf,qBAAA,CAAKd,OAAA,EAAL,IAAK;EACd;AACF;AAEO,IAAM8B,aAAA,GAAgB,IAAI/B,aAAA,CAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}